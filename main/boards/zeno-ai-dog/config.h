#ifndef _BOARD_CONFIG_H_
#define _BOARD_CONFIG_H_

#include <driver/gpio.h>
#include <driver/uart.h>

// 音频配置
#define AUDIO_INPUT_SAMPLE_RATE  16000
#define AUDIO_OUTPUT_SAMPLE_RATE 16000

#define AUDIO_I2S_GPIO_MCLK GPIO_NUM_45
#define AUDIO_I2S_GPIO_WS   GPIO_NUM_41
#define AUDIO_I2S_GPIO_BCLK GPIO_NUM_39
#define AUDIO_I2S_GPIO_DIN  GPIO_NUM_40
#define AUDIO_I2S_GPIO_DOUT GPIO_NUM_42

#define AUDIO_CODEC_PA_PIN       GPIO_NUM_46
#define AUDIO_CODEC_I2C_SDA_PIN  GPIO_NUM_4
#define AUDIO_CODEC_I2C_SCL_PIN  GPIO_NUM_5
#define AUDIO_CODEC_ES8311_ADDR  ES8311_CODEC_DEFAULT_ADDR

// 按钮配置
#define BUILTIN_LED_GPIO        GPIO_NUM_NC
#define BOOT_BUTTON_GPIO        GPIO_NUM_0
#define VOLUME_UP_BUTTON_GPIO   GPIO_NUM_NC
#define VOLUME_DOWN_BUTTON_GPIO GPIO_NUM_NC

// 显示屏配置
#define DISPLAY_WIDTH   240
#define DISPLAY_HEIGHT  240
#define DISPLAY_MIRROR_X false
#define DISPLAY_MIRROR_Y true
#define DISPLAY_SWAP_XY true

// 正确设置偏移量使内容居中
#define DISPLAY_OFFSET_X  80
#define DISPLAY_OFFSET_Y  0

#define DISPLAY_DC_GPIO     GPIO_NUM_43
#define DISPLAY_CS_GPIO     GPIO_NUM_44
#define DISPLAY_CLK_GPIO    GPIO_NUM_21
#define DISPLAY_MOSI_GPIO   GPIO_NUM_47
#define DISPLAY_RST_GPIO    GPIO_NUM_NC

#define DISPLAY_BACKLIGHT_PIN GPIO_NUM_46
#define DISPLAY_BACKLIGHT_OUTPUT_INVERT false

// 串口配置（用于控制舵机）
#define UART_SERVO_TXD GPIO_NUM_48
#define UART_SERVO_RXD GPIO_NUM_38
#define UART_SERVO_RTS (-1)
#define UART_SERVO_CTS (-1)

#define SERVO_UART_PORT_NUM      UART_NUM_1
#define SERVO_UART_BAUD_RATE     (115200)
#define SERVO_BUF_SIZE           (1024)

// 舵机控制相关定义
#define SERVO_ANGLE_MIN 0
#define SERVO_ANGLE_MAX 180

// 舵机ID定义
typedef enum {
    SERVO_LEFT_FRONT = 0,   // 左前脚
    SERVO_LEFT_REAR,        // 左后脚
    SERVO_RIGHT_FRONT,      // 右前脚
    SERVO_RIGHT_REAR,       // 右后脚
    SERVO_MAX
} servo_id_t;

#endif // _BOARD_CONFIG_H_
